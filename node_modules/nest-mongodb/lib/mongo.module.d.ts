import { DynamicModule } from '@nestjs/common';
import { MongoModuleAsyncOptions } from './interfaces/mongo-options.interface';
/**
 * Module for the MongoDB driver
 */
export declare class MongoModule {
    /**
     * Inject the MongoDB driver synchronously.
     * @param uri The database URI
     * @param dbName The database name
     * @param options Options for the MongoClient that will be created
     * @param connectionName A unique name for the connection.  If not specified, a default name
     * will be used.
     */
    static forRoot(uri: string, dbName: string, options?: any, connectionName?: string): DynamicModule;
    /**
     * Inject the MongoDB driver asynchronously, allowing any dependencies such as a configuration
     * service to be injected first.
     * @param options Options for asynchrous injection
     */
    static forRootAsync(options: MongoModuleAsyncOptions): DynamicModule;
    /**
     * Inject collections.
     * @param collections An array of the names of the collections to be injected.
     * @param connectionName A unique name for the connection. If not specified, a default name
     * will be used.
     */
    static forFeature(collections?: string[], connectionName?: string): DynamicModule;
}
